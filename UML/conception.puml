@startuml Mastermind

title Conception Mastermind

skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
hide enum methods

package Mastermind {
    package model
    {
        class Partie {
            - score : Integer
            - nb_manches : Integer
            - nb_pions_combinaison : Integer
            - nb_tentatives : Integer
            - nb_pions : Integer
            ' - combinaison_secrete : Combinaison
            + <<create>> Partie()
            + start_partie()
            + end_partie()
        }

        class Manche {
            - nombre_max_tentatives: Integer
            + <<create>> Manche()
            + ajouter_tentative(tentative: Combinaison)
            + verifier_tentative(tentative: Combinaison): Ligne_Indices[*]
            + verifier_fin_manche(): Boolean
        }

        class Score {
            - score_manche_actuelle: Integer
            - score_total: Integer
            + <<create>> Score()
            + calculer_score_manche(tentative: Combinaison)
            + calculer_score_total(): Integer
        }

        class Ligne_Indices {
            + <<create>> Ligne_Indices()
            + get_nb_bonne_position(): Integer
            + get_nb_bonne_couleur(): Integer
        }

        class Indice {
            - state: Integer 
            ' 0: non trouvé, 1: bonne couleur, 2: bien placé
            + verifier_position(): Integer
            + verifier_couleur(): Integer
        }

        class Combinaison {
            + <<create>> Combinaison()
            + generer_combinaison_secrete(): Combinaison
            + verifier_correspondance(tentative: Combinaison): Ligne_Indices
        }

        interface Strategy_mode {
            + select()
        }

        class Facile implements Strategy_mode {
            + select()
        }

        class Classique implements Strategy_mode {
            + select()
        }

        class Numerique implements Strategy_mode {
            + select()
        }

        enum Pions {
            ROUGE
            BLEU
            VERT
            JAUNE
            ORANGE
            VIOLET
            BLANC
            NOIR
        }

        class Mode_factory {
            + createMode(type: String): Strategy_mode
        }

        class Settings {
            - nb_manches: Integer
            - nb_pions_combinaison: Integer
            - nb_tentatives: Integer
            - nb_pions: Integer
            + <<create>> Settings()
            + get_nb_manches(): Integer
            + get_nb_pions_combinaison(): Integer
            + get_nb_tentatives(): Integer
            + get_nb_pions(): Integer
        }
    }

    class Mastermind_app {
        + {static} main(args: String[])
    }
}

' Liens
Partie --> "*\n -_manches" Manche: > est composé de
Ligne_Indices --> "*\n -_indices" Indice: > est composé de
Manche -> "*\n -_indices" Ligne_Indices: > est composé de
Manche --> "*\n -_tentatives" Combinaison: > est composé de
Manche --> "1\n -_combinaison_secrete" Combinaison: > est composé de
Combinaison o--> "*\n -_pions" Pions: > est composé de
Ligne_Indices --> "1\n -_combinaison_secrete" Combinaison: > possède

Mastermind_app --> "1\n -_partie" Partie: > lance
Partie o-> "1\n-_mode" Strategy_mode : > select 
Mastermind_app ..> Strategy_mode : <<uses>>
Mode_factory ..> Facile: <<use>>
Mode_factory ..> Classique: <<use>>
Mode_factory ..> Numerique: <<use>>
Mode_factory ..> Strategy_mode: <<use>>

' Note top of Settings
' nb_manches : [3,5]
' nb_pions_combinaison : [4,6]
' nb_tentatives : [10,12]
' nb_pions : [4,8,12]

@enduml