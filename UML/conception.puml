@startuml Mastermind

title Conception Mastermind

skinparam style strictuml
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
hide enum methods

package Mastermind
{
    /''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '                          main                           '
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''/
    class MastermindApp{
        + {static} main(args: String[])
    }

    /''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '                         models                          '
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''/
    package model
    {
        class MastermindFacade {
            + <<create>> MastermindFacade()
            + lancerJeu()
        }

        class Partie {
            - Joueur : String
            - NbManches : Integer
            - NbPionsCombinaison : Integer
            - maxTentatives : Integer
            - nbPions : Integer
            + <<create>> Partie()
            + debutPartie()
            + finPartie()
            + setMode(mode : StrategyMode)
        }

        class Score {
            - scoreManche: Integer[*]
            - scoreTotal: Integer
            + <<create>> Score()
            + calculerScoreManche(indices : LigneIndice, mode : StrategyMode)
            + calculerScoreTotal(): Integer
        }

        class Manche {
            - numTentative: Integer
            + <<create>> Manche()
            + ajouterTentative(tentative: Combinaison)
            + verifierFinManche(): Boolean
            + estGagne() : Boolean
            + estDepasse() : Boolean
            + finManche()
        }

        class Combinaison {
            + <<create>> Combinaison()
            + {static}genererCombinaisonSecrete(): Combinaison
            + verifierCorrespondance(tentative: Combinaison): Ligne_Indices
        }

        class LigneIndices {
            + <<create>> LigneIndices()
            + estPositionCouleur(): Boolean
            + estCouleur(): Boolean
        }

        interface StrategyMode {
            + select()
        }

        class ModeFactory {
            + <<create>> ModeFactory()
            + createFacile() : StrategyMode
            + createClassique() : StrategyMode
            + createNumerique() : StrategyMode
        }

        enum Pions {
            +ROUGE
            +BLEU
            +VERT
            +JAUNE
            +ORANGE
            +VIOLET
            +BLANC
            +NOIR
        }

        enum Indice {
            +POSITIONCOULEUR
            +COULEUR
            +ABSENT
        }
    }

    /''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '                          view                           '
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''/
    package view
    {
        class Facile implements StrategyMode {
            + select()
        }

        class Classique implements StrategyMode {
            + select()
        }

        class Numerique implements StrategyMode {
            + select()
        }
    }

    /''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '                       controller                        '
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''/
    package controller
    {
        class Settings {
            - nbManches: Integer
            - nbPionsCombinaison: Integer
            - nbTentatives: Integer
            - nbPions: Integer
            + <<create>> Settings()
            + getNbManches(): Integer
            + getNbPionsCombinaison(): Integer
            + getNbTentatives(): Integer
            + getNbPions(): Integer
        }
    }
}

/''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                          lien                           '
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''/
MastermindApp ..> MastermindFacade : <<uses>>
MastermindFacade ..> Partie : <<uses>>
MastermindFacade ..> StrategyMode : <<uses>>
MastermindFacade ..> ModeFactory : <<uses>>
Partie *--> "3..5\n -_manches" Manche: > est composé de
Partie o-> "1\n-_mode" StrategyMode : > select
Partie *-> "1\n-_score" Score
Manche *-> "*\n -_indices" LigneIndices: > est composé de
Manche *--> "10..12\n -_tentatives" Combinaison: > est composé de
Manche *--> "1\n -_combinaison_secrete" Combinaison: > est composé de
LigneIndices --> "*\n -_indices" Indice: > est composé de
Combinaison o--> "4..6\n -_pions" Pions: > est composé de
ModeFactory ..> StrategyMode : <<use>>
ModeFactory ..> Facile : <<use>>
ModeFactory ..> Classique : <<use>>
ModeFactory ..> Numerique : <<use>>
@enduml